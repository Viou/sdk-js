(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{111:function(e,t,a){"use strict";a.d(t,"a",(function(){return u})),a.d(t,"b",(function(){return b}));var r=a(0),n=a.n(r);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function c(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},l=Object.keys(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var p=n.a.createContext({}),s=function(e){var t=n.a.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},u=function(e){var t=s(e.components);return n.a.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.a.createElement(n.a.Fragment,{},t)}},m=n.a.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,i=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=s(a),m=r,b=u["".concat(i,".").concat(m)]||u[m]||d[m]||l;return a?n.a.createElement(b,o(o({ref:t},p),{},{components:a})):n.a.createElement(b,o({ref:t},p))}));function b(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=m;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var p=2;p<l;p++)i[p]=a[p];return n.a.createElement.apply(null,i)}return n.a.createElement.apply(null,a)}m.displayName="MDXCreateElement"},64:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return i})),a.d(t,"metadata",(function(){return o})),a.d(t,"toc",(function(){return c})),a.d(t,"default",(function(){return s}));var r=a(3),n=a(7),l=(a(0),a(111)),i={title:"Uploads"},o={unversionedId:"api/uploads",id:"api/uploads",isDocsHomePage:!1,title:"Uploads",description:"Wrapper for tus-js-client",source:"@site/docs/api/uploads.md",slug:"/api/uploads",permalink:"/sdk-js/api/uploads",editUrl:"https://github.com/availity/sdk-js/edit/master/docusaurus/docs/api/uploads.md",version:"current",sidebar:"someSidebar",previous:{title:"Downloads",permalink:"/sdk-js/api/downloads"},next:{title:"Creating a Proxy",permalink:"/sdk-js/recipes/proxy"}},c=[{value:"Install",id:"install",children:[{value:"NPM",id:"npm",children:[]},{value:"Yarn",id:"yarn",children:[]}]},{value:"Usage",id:"usage",children:[{value:"Required params",id:"required-params",children:[]},{value:"Optional params",id:"optional-params",children:[]}]}],p={toc:c};function s(e){var t=e.components,a=Object(n.a)(e,["components"]);return Object(l.b)("wrapper",Object(r.a)({},p,a,{components:t,mdxType:"MDXLayout"}),Object(l.b)("p",null,"Wrapper for tus-js-client"),Object(l.b)("p",null,Object(l.b)("a",{parentName:"p",href:"https://www.npmjs.com/package/@availity/upload-core"},Object(l.b)("img",{parentName:"a",src:"https://img.shields.io/npm/v/@availity/upload-core.svg?style=for-the-badge",alt:"Version"}))),Object(l.b)("h2",{id:"install"},"Install"),Object(l.b)("h3",{id:"npm"},"NPM"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-bash"},"$ npm install @availity/upload-core tus-js-client\n")),Object(l.b)("h3",{id:"yarn"},"Yarn"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-bash"},"$ yarn add @availity/upload-core tus-js-client\n")),Object(l.b)("h2",{id:"usage"},"Usage"),Object(l.b)("h3",{id:"required-params"},"Required params"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"bucketId"),Object(l.b)("li",{parentName:"ul"},"customerId"),Object(l.b)("li",{parentName:"ul"},"clientId")),Object(l.b)("h3",{id:"optional-params"},"Optional params"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"fileTypes: string array of file extensions to allow (error thrown if file.name does not contain one of the types)"),Object(l.b)("li",{parentName:"ul"},"maxSize: maximum size allowed per file"),Object(l.b)("li",{parentName:"ul"},"metadata: object mapping metadata keys and values to add to the TUS upload"),Object(l.b)("li",{parentName:"ul"},"allowedFileNameCharacters: restrict the file name characters to a regex set"),Object(l.b)("li",{parentName:"ul"},"pollingTime: custom av scan polling time (default 5000ms)")),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-js"},"import Upload from '@availity/upload-core';\n\nconst upload = new Upload(file, {\n    bucketId: 'a',\n    customerId: 'b',\n    clientId: 'c',\n    fileTypes: ['.png', '.pdf'],\n    maxSize: 3e8,\n    metadata: { key: 'value' },\n    allowedFileNameCharacters: '_a-zA-Z0-9 ', // alphanumeric, spaces, underscore\n    pollingTime: 1000,\n});\nupload.start();\n")))}s.isMDXComponent=!0}}]);